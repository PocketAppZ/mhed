//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mhed.gui {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("mhed.gui.AppStrings", typeof(AppStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The program is already running. Starting the second copy is not allowed..
        /// </summary>
        internal static string AHE_AlreadyRunning {
            get {
                return ResourceManager.GetString("AHE_AlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to R/O.
        /// </summary>
        internal static string AHE_AppStatusRO {
            get {
                return ResourceManager.GetString("AHE_AppStatusRO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The offline help system file is not installed, or is not supported by the selected program language!.
        /// </summary>
        internal static string AHE_ChmFileNotFound {
            get {
                return ResourceManager.GetString("AHE_ChmFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to copy selected data to the clipboard!.
        /// </summary>
        internal static string AHE_ClipboardCopyError {
            get {
                return ResourceManager.GetString("AHE_ClipboardCopyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to cut selected data to the clipboard!.
        /// </summary>
        internal static string AHE_ClipboardCutError {
            get {
                return ResourceManager.GetString("AHE_ClipboardCutError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to paste data from the clipboard!.
        /// </summary>
        internal static string AHE_ClipboardPasteError {
            get {
                return ResourceManager.GetString("AHE_ClipboardPasteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete the selected rows!.
        /// </summary>
        internal static string AHE_DeleteRowError {
            get {
                return ResourceManager.GetString("AHE_DeleteRowError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning! A parsing error was encountered. The file {0} was probably loaded with errors..
        /// </summary>
        internal static string AHE_ExceptionDetected {
            get {
                return ResourceManager.GetString("AHE_ExceptionDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit {0} without saving changes?.
        /// </summary>
        internal static string AHE_ExitConfirmation {
            get {
                return ResourceManager.GetString("AHE_ExitConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hosts file: {0}. Show it in file manager?.
        /// </summary>
        internal static string AHE_HMessg {
            get {
                return ResourceManager.GetString("AHE_HMessg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to import settings from a previous version of the application! All settings will be reset to their default values..
        /// </summary>
        internal static string AHE_ImportSettingsError {
            get {
                return ResourceManager.GetString("AHE_ImportSettingsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect hostname entered!.
        /// </summary>
        internal static string AHE_IncorrectHostname {
            get {
                return ResourceManager.GetString("AHE_IncorrectHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect IP-address entered!.
        /// </summary>
        internal static string AHE_IncorrectIPAddress {
            get {
                return ResourceManager.GetString("AHE_IncorrectIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to en.
        /// </summary>
        internal static string AHE_LangPrefix {
            get {
                return ResourceManager.GetString("AHE_LangPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The core library version does not match the application&apos;s version. Please reinstall or report this issue to developers..
        /// </summary>
        internal static string AHE_LibraryVersionMissmatch {
            get {
                return ResourceManager.GetString("AHE_LibraryVersionMissmatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log file is empty or doesn&apos;t exist!.
        /// </summary>
        internal static string AHE_LogFileNotFound {
            get {
                return ResourceManager.GetString("AHE_LogFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator rights are required to perform the requested action!.
        /// </summary>
        internal static string AHE_NoAdminRights {
            get {
                return ResourceManager.GetString("AHE_NoAdminRights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Hosts file {0} couldn&apos;t be found!.
        /// </summary>
        internal static string AHE_NoFileDetected {
            get {
                return ResourceManager.GetString("AHE_NoFileDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No new updates available. You are using the latest version!.
        /// </summary>
        internal static string AHE_NoUpdatesFound {
            get {
                return ResourceManager.GetString("AHE_NoUpdatesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load Hosts file into the selected text editor!.
        /// </summary>
        internal static string AHE_OpenInNotepadError {
            get {
                return ResourceManager.GetString("AHE_OpenInNotepadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to show Hosts file in default file manager!.
        /// </summary>
        internal static string AHE_OpenShellError {
            get {
                return ResourceManager.GetString("AHE_OpenShellError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings were saved successfully!.
        /// </summary>
        internal static string AHE_OptionsSaved {
            get {
                return ResourceManager.GetString("AHE_OptionsSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to restart the application with administrator rights!.
        /// </summary>
        internal static string AHE_RestartAsAdminError {
            get {
                return ResourceManager.GetString("AHE_RestartAsAdminError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restarting the application hasn&apos;t yet been implemented on current platform!.
        /// </summary>
        internal static string AHE_RestartAsAdminNotImplemented {
            get {
                return ResourceManager.GetString("AHE_RestartAsAdminNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart this application as an administrator?.
        /// </summary>
        internal static string AHE_RestartAsAdminQuestion {
            get {
                return ResourceManager.GetString("AHE_RestartAsAdminQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application is already running with administrator rights!.
        /// </summary>
        internal static string AHE_RestartAsAdminRunning {
            get {
                return ResourceManager.GetString("AHE_RestartAsAdminRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore default Hosts file?.
        /// </summary>
        internal static string AHE_RestDef {
            get {
                return ResourceManager.GetString("AHE_RestDef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hosts file saved successfully!.
        /// </summary>
        internal static string AHE_Saved {
            get {
                return ResourceManager.GetString("AHE_Saved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning! An error occurred while writing to file {0}. Maybe you don&apos;t have enough rights to do this, or someone is blocking write attempts..
        /// </summary>
        internal static string AHE_SaveException {
            get {
                return ResourceManager.GetString("AHE_SaveException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start the offline help viewer with the required documentation page!.
        /// </summary>
        internal static string AHE_ShowHelpError {
            get {
                return ResourceManager.GetString("AHE_ShowHelpError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to show debug log file!.
        /// </summary>
        internal static string AHE_ShowLogFileError {
            get {
                return ResourceManager.GetString("AHE_ShowLogFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New version {0} is available. Do you want to get more information about it?.
        /// </summary>
        internal static string AHE_UpdateAvailable {
            get {
                return ResourceManager.GetString("AHE_UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to check for updates. Please try again later!.
        /// </summary>
        internal static string AHE_UpdateCheckError {
            get {
                return ResourceManager.GetString("AHE_UpdateCheckError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load URL in default web browser!.
        /// </summary>
        internal static string AHE_UrlOpenError {
            get {
                return ResourceManager.GetString("AHE_UrlOpenError", resourceCulture);
            }
        }
    }
}
